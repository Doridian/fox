on:
  push:
    branches: [main]

name: Release

concurrency:
  group: release
  cancel-in-progress: true

env:
  RELEASE_NAME: ''
  RELEASE_TAG: ''

permissions:
  contents: write

jobs:
  check:
    uses: ./.github/workflows/check.yml
    secrets: inherit
  create_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - run: |
          echo "RELEASE_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(./version.sh)" >> $GITHUB_ENV
      - name: Release create
        uses: ncipollo/release-action@v1.15.0
        with:
          name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.RELEASE_TAG }}
          commit: ${{ github.sha }}
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBody: true
          omitBodyDuringUpdate: true
          removeArtifacts: true
  release:
    needs: [check, create_release]
    strategy:
      matrix:
        os:
          # - macos-latest
          - ubuntu-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - run: |
          echo "RELEASE_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(./version.sh)" >> $GITHUB_ENV
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache: true
      - run: ./build.sh
      - name: Release add
        uses: ncipollo/release-action@v1.15.0
        with:
          name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.RELEASE_TAG }}
          commit: ${{ github.sha }}
          artifacts: ./src/fox
          allowUpdates: true
          artifactErrorsFailBuild: true
          omitBody: true
          omitBodyDuringUpdate: true
          removeArtifacts: false
